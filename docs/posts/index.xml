<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts - Today I Learnt...</title>
    <link>https://til.codeinthehole.com/posts/</link>
    <description>Recent content in Posts on Today I Learnt...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Sep 2020 16:00:09 +0100</lastBuildDate>
    
	<atom:link href="https://til.codeinthehole.com/posts/index.xml" rel="self" type="application/rss+xml" />
    

    
    <item>
      <title>How to read from one buffer to another in Vim</title>
      <link>https://til.codeinthehole.com/posts/how-to-read-from-one-buffer-to-another-in-vim/</link>
      <pubDate>Wed, 23 Sep 2020 16:00:09 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-read-from-one-buffer-to-another-in-vim/</guid>
      <description>Refer to the buffer&amp;rsquo;s number using a hash. For example, run:
:read #3to insert the contents of the file linked to buffer 3. Note that a buffer&amp;rsquo;s content isn&amp;rsquo;t necessarily the same as the linked file.
From: https://stackoverflow.com/questions/37859530/vim-how-to-read-from-one-buffer-into-another</description>
    </item>
    
    <item>
      <title>SSH config supports multiple host patterns in one block</title>
      <link>https://til.codeinthehole.com/posts/ssh-config-supports-multiple-host-patterns-in-one-block/</link>
      <pubDate>Wed, 23 Sep 2020 10:16:13 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/ssh-config-supports-multiple-host-patterns-in-one-block/</guid>
      <description>From man ssh_config:
 Host Restricts the following declarations (up to the next Host or Match keyword) to be only for those hosts that match one of the patterns given after the keyword. If more than one pattern is provided, they should be separated by whitespace.
 and so you can do this:
Host 10.0.20.* 10.0.28.* 10.0.29.* 10.0.30.* User ubuntu IdentityFile ~/.ssh/xxx/id_rsa ProxyJump some-bastion-host StrictHostKeyChecking no UserKnownHostsFile /dev/null where multiple host patterns are used for one block.</description>
    </item>
    
    <item>
      <title>There&#39;s a Chrome extension for switching AWS IAM roles</title>
      <link>https://til.codeinthehole.com/posts/theres-a-chrome-extension-for-switching-aws-iam-roles/</link>
      <pubDate>Tue, 22 Sep 2020 22:12:13 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/theres-a-chrome-extension-for-switching-aws-iam-roles/</guid>
      <description>It&amp;rsquo;s the AWS Extend Switch Roles extension.
AWS&amp;rsquo;s Console only keeps your 5 most recent AWS accounts as quick links, which this extension gives doesn&amp;rsquo;t limit you.
This is useful if you&amp;rsquo;re using AWS Organizations and have lots of child AWS accounts that you need to assume roles into.</description>
    </item>
    
    <item>
      <title>YAML has several string-parsing gotchas</title>
      <link>https://til.codeinthehole.com/posts/yaml-has-several-stringparsing-gotchas/</link>
      <pubDate>Mon, 21 Sep 2020 12:33:56 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/yaml-has-several-stringparsing-gotchas/</guid>
      <description>For instance, in YAML 1.1:
 Yes and No parse to true and false x:y is parsed as a base-60 number if y is less than 60  See for yourself with these Python tests:
import yaml import io def test_parsing_iso_country_codes(): f = io.StringIO(&amp;#34;&amp;#34;&amp;#34;--- england: GB norway: NO &amp;#34;&amp;#34;&amp;#34;) content = yaml.load(f, Loader=yaml.FullLoader) assert content == { &amp;#34;england&amp;#34;: &amp;#34;GB&amp;#34;, &amp;#34;norway&amp;#34;: False, } def test_parsing_ports(): f = io.StringIO(&amp;#34;&amp;#34;&amp;#34;--- low: 1:1 high: 20:100 &amp;#34;&amp;#34;&amp;#34;) content = yaml.</description>
    </item>
    
    <item>
      <title>Javascript&#39;s unary `&#43;` operator casts `null` to zero</title>
      <link>https://til.codeinthehole.com/posts/javascripts-unary-plus-operator-casts-null-to-zero/</link>
      <pubDate>Mon, 21 Sep 2020 10:24:01 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/javascripts-unary-plus-operator-casts-null-to-zero/</guid>
      <description>As in:
&amp;gt; +null 0 which is different from parseInt or parseFloat which return NaN when given null.</description>
    </item>
    
    <item>
      <title>How to count lines of code in a Git repo for a given commit</title>
      <link>https://til.codeinthehole.com/posts/how-to-count-lines-of-code-in-a-git-repo/</link>
      <pubDate>Thu, 17 Sep 2020 15:54:21 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-count-lines-of-code-in-a-git-repo/</guid>
      <description>For a given commit $SHA, use:
$ git diff --shortstat `git hash-object -t tree /dev/null`..$SHA which works as git hash-object -t tree /dev/null computes the hash of the empty tree.</description>
    </item>
    
    <item>
      <title>About Vim&#39;s `:helpgrep` command</title>
      <link>https://til.codeinthehole.com/posts/about-vims-helpgrep-command/</link>
      <pubDate>Wed, 16 Sep 2020 14:27:56 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-vims-helpgrep-command/</guid>
      <description>Which lets you search Vim&amp;rsquo;s help files for a given pattern. For example:
:helpgrep What is the meaning of life Discovered via a Hashrocket TIL and an episode of Josh Branchaud&amp;rsquo;s Vim Un-Alphabet screencast series.</description>
    </item>
    
    <item>
      <title>Vim recommends using Emacs-style key bindings in command mode</title>
      <link>https://til.codeinthehole.com/posts/vim-recommends-using-emacsstyle-key-bindings-in-command-mode/</link>
      <pubDate>Wed, 16 Sep 2020 09:16:47 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/vim-recommends-using-emacsstyle-key-bindings-in-command-mode/</guid>
      <description>As in, using these command-mode maps:
&amp;#34; start of line :cnoremap &amp;lt;C-A&amp;gt;	&amp;lt;Home&amp;gt; &amp;#34; back one character :cnoremap &amp;lt;C-B&amp;gt;	&amp;lt;Left&amp;gt; &amp;#34; delete character under cursor :cnoremap &amp;lt;C-D&amp;gt;	&amp;lt;Del&amp;gt; &amp;#34; end of line :cnoremap &amp;lt;C-E&amp;gt;	&amp;lt;End&amp;gt; &amp;#34; forward one character :cnoremap &amp;lt;C-F&amp;gt;	&amp;lt;Right&amp;gt; &amp;#34; recall newer command-line :cnoremap &amp;lt;C-N&amp;gt;	&amp;lt;Down&amp;gt; &amp;#34; recall previous (older) command-line :cnoremap &amp;lt;C-P&amp;gt;	&amp;lt;Up&amp;gt; &amp;#34; back one word :cnoremap &amp;lt;Esc&amp;gt;&amp;lt;C-B&amp;gt;	&amp;lt;S-Left&amp;gt; &amp;#34; forward one word :cnoremap &amp;lt;Esc&amp;gt;&amp;lt;C-F&amp;gt;	&amp;lt;S-Right&amp;gt; See http://vimdoc.</description>
    </item>
    
    <item>
      <title>How to conditionally include items in a Terraform list</title>
      <link>https://til.codeinthehole.com/posts/how-to-conditionally-include-items-in-a-terraform-list/</link>
      <pubDate>Tue, 15 Sep 2020 11:49:53 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-conditionally-include-items-in-a-terraform-list/</guid>
      <description>It&amp;rsquo;s not obvious how to build a Terraform list where an item is only included if some condition is met. One solution is to use flatten along with a conditional expression.
Something like this:
resource &amp;#34;aws_security_group&amp;#34; &amp;#34;this&amp;#34; { ... ingress { ... security_groups = flatten([ aws_security_group.server-type-a.id, var.include_server_type_b ? aws_security_group.server-type-b[*].id : [] ]) } where the server-type-b security group is only included the security_groups list if var.include_server_type_b is truthy.</description>
    </item>
    
    <item>
      <title>You can change the font in Slack with `/slackfont $font`</title>
      <link>https://til.codeinthehole.com/posts/you-can-change-the-font-in-slack-with-slackfont-font/</link>
      <pubDate>Sat, 12 Sep 2020 21:22:44 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/you-can-change-the-font-in-slack-with-slackfont-font/</guid>
      <description>For example: /slackfont Comic Sans MS or even /slackfont Wingdings.
To reset to the default font, run /slackfont without an argument.</description>
    </item>
    
    <item>
      <title>You can display the typed text in Alfred in a huge typeface</title>
      <link>https://til.codeinthehole.com/posts/you-can-display-the-typed-text-in-alfred-in-a-huge-typeface/</link>
      <pubDate>Mon, 07 Sep 2020 10:37:57 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/you-can-display-the-typed-text-in-alfred-in-a-huge-typeface/</guid>
      <description>By pressing cmd + L after typing the text.
The text is so large, someone across the room can read it.
  See?
From https://news.ycombinator.com/item?id=24391899</description>
    </item>
    
    <item>
      <title>Python 3.7 supports postponed evaluation of annotations</title>
      <link>https://til.codeinthehole.com/posts/python-37-supports-postponed-evaluation-of-annotations/</link>
      <pubDate>Fri, 04 Sep 2020 16:27:33 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/python-37-supports-postponed-evaluation-of-annotations/</guid>
      <description>For example, instead of:
import _csv def generate_report(writer: &amp;#39;_csv._writer&amp;#39;): pass you can use:
from __future__ import annotations import _csv def generate_report(writer: _csv._writer): pass and avoid using a string literal for the type annotation.
This follows on from a related TIL about how to specify type annotations for the csv module.
Related:
 __future__ statement definitions PEP 563 - Postponed Evaluation of Annotations  </description>
    </item>
    
    <item>
      <title>Vim doesn&#39;t create the persistent undo folder automatically</title>
      <link>https://til.codeinthehole.com/posts/vim-doesnt-create-the-persistent-undo-folder-automatically/</link>
      <pubDate>Fri, 04 Sep 2020 11:38:38 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/vim-doesnt-create-the-persistent-undo-folder-automatically/</guid>
      <description>I have this in ~/.vimrc:
&amp;#34; Keep undo history between sessionsif has(&amp;#39;persistent_undo&amp;#39;) set undofile set undodir=~/.vim_undo set undolevels=2000endifbut, after switching laptops, I noticed the persistent undo feature wasn&amp;rsquo;t working.
The problem was that the ~/.vim_undo folder didn&amp;rsquo;t exist which silently prevents the feature working.
You can create this automaticaly in ~/.vimrc if you like.</description>
    </item>
    
    <item>
      <title>How to use type annotations with Python&#39;s `csv` module</title>
      <link>https://til.codeinthehole.com/posts/how-to-typecheck-csv-objects-in-python/</link>
      <pubDate>Thu, 03 Sep 2020 17:13:22 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-typecheck-csv-objects-in-python/</guid>
      <description>Adding a type annotation for a &amp;ldquo;writer&amp;rdquo; object created by csv.writer(...) is fiddlier than you might think.
The type of the writer object is _csv.writer which you verify with:
&amp;gt;&amp;gt;&amp;gt; import csv, sys &amp;gt;&amp;gt;&amp;gt; type(csv.writer(sys.stdout)) &amp;lt;class &amp;#39;_csv.writer&amp;#39;&amp;gt; but if you try this:
import _csv def generate_report(writer: _csv.writer): pass mypy complains that:
Function &amp;quot;_csv.writer&amp;quot; is not valid as a type [valid-type]. The correct approach is to use _csv._writer as the type annotation.</description>
    </item>
    
    <item>
      <title>How to configure Alfred&#39;s Bear workflow to open notes in the main window</title>
      <link>https://til.codeinthehole.com/posts/how-to-configure-alfreds-bear-workflow-to-open-notes-in-the-main-window/</link>
      <pubDate>Wed, 02 Sep 2020 11:34:04 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-configure-alfreds-bear-workflow-to-open-notes-in-the-main-window/</guid>
      <description>This applies to the Bear workflow written in Go whose default behaviour (in v1.1.6) is to open notes in a new window rather than the main Bear application window.
To adjust this, after installing and performing the dance of authorising all the workflow scripts, you need to manually edit the workflow property list file and replace new_window=yes with new_window=no.
FYI: the info.plist file can be found in:
~/Library/Application Support/Alfred/Alfred.alfredpreferences/workflows/ or by right clicking on the workflow in Alfred&amp;rsquo;s preferences and selecting &amp;ldquo;Open in Finder&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>About better YAML file folding in Vim</title>
      <link>https://til.codeinthehole.com/posts/about-better-yaml-file-folding-in-vim/</link>
      <pubDate>Fri, 28 Aug 2020 18:36:09 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-better-yaml-file-folding-in-vim/</guid>
      <description>Using foldmethod=indent is ok but it&amp;rsquo;s better to use the pedrohdz/vim-yaml-folds plugin. The author gives more detail in Vim folding rules for YAML.</description>
    </item>
    
    <item>
      <title>OpenDNS provide free porn-blocking DNS servers</title>
      <link>https://til.codeinthehole.com/posts/opendns-provide-free-pornblocking-dns-servers/</link>
      <pubDate>Thu, 27 Aug 2020 12:03:43 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/opendns-provide-free-pornblocking-dns-servers/</guid>
      <description>Installation requires switching the DNS servers of your router or device to use the OpenDNS ones. If you create an account, you can customise the degree of filtering and view some simple stats.
This is useful for home networking when you have kids. Unfortunately, the Virgin Media Hub 3.0 I have doesn&amp;rsquo;t support custom DNS settings - you need to use it as a modem with a separate router to achieve that.</description>
    </item>
    
    <item>
      <title>AWS Availability Zones have counter-intuitive IDs</title>
      <link>https://til.codeinthehole.com/posts/aws-availability-zones-have-counterintuitive-ids/</link>
      <pubDate>Tue, 25 Aug 2020 22:18:32 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/aws-availability-zones-have-counterintuitive-ids/</guid>
      <description>Today, the AWS Service Health Dashboard referred to an Availability Zone in a way I wasn&amp;rsquo;t familiar with:
 3:52 AM PDT We are experiencing instance connectivity issues in a single Availability Zone (euw2-az2) in the EU-WEST-2 Region.
 See:
  Here &amp;ldquo;euw2-az2&amp;rdquo; is the &amp;ldquo;Zone ID&amp;rdquo; of the Availability Zone, and the mapping from Zone ID to the more familiar Zone Name is non-obvious. See, for example:
$ aws ec2 describe-availability-zones --region eu-west-2 | jq -r &amp;#39;.</description>
    </item>
    
    <item>
      <title>You can rate-limit issues using a Sentry DSN</title>
      <link>https://til.codeinthehole.com/posts/you-can-ratelimit-issues-using-a-sentry-dsn/</link>
      <pubDate>Mon, 24 Aug 2020 16:19:10 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/you-can-ratelimit-issues-using-a-sentry-dsn/</guid>
      <description>If you want to manage how your event quota is consumed with Sentry, you can apply rate limits at the DSN level.
  This lets you apply different rate limiting settings for different parts of your application by using separate DSNs.
See Sentry&amp;rsquo;s docs on the subject.</description>
    </item>
    
    <item>
      <title>How to list pages with matching tag in Hugo</title>
      <link>https://til.codeinthehole.com/posts/how-to-list-pages-with-matching-tag-in-hugo/</link>
      <pubDate>Mon, 17 Aug 2020 14:32:50 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-list-pages-with-matching-tag-in-hugo/</guid>
      <description>In a detail template, you can grab a post&amp;rsquo;s tags with {{ .GetTerms &amp;quot;tags&amp;quot; }}. You can then loop over this and fetch a list of pages with each tag, excluding the current post:
{{ range $tag_pages }} {{ $related_tag_pages := where .Pages &amp;#34;Title&amp;#34; &amp;#34;!=&amp;#34; $.Title }} {{ if $related_tag_pages }} &amp;lt;p&amp;gt;Other posts about &amp;lt;a href=&amp;#34;{{ .Permalink }}&amp;#34;&amp;gt;{{ .Title | markdownify }}&amp;lt;/a&amp;gt;:&amp;lt;/p&amp;gt; &amp;lt;ul&amp;gt; {{ range $related_tag_pages }} &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;{{ .RelPermalink }}&amp;#34;&amp;gt;{{ .</description>
    </item>
    
    <item>
      <title>About `:help macvim`</title>
      <link>https://til.codeinthehole.com/posts/about-help-macvim/</link>
      <pubDate>Mon, 17 Aug 2020 11:53:31 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-help-macvim/</guid>
      <description>MacVim ships with its own help files, accessed via:
:help macvimThese provide lots of useful info on things like:
 The differences between MacVim and other Vim variants MacVim-specific preferences The macvim color scheme  and much more.</description>
    </item>
    
    <item>
      <title>About Vim&#39;s `:diffthis` command</title>
      <link>https://til.codeinthehole.com/posts/about-vims-diffthis-command/</link>
      <pubDate>Mon, 17 Aug 2020 09:28:52 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-vims-diffthis-command/</guid>
      <description>You can manually compare two more open buffers by running:
:windo diffthisThis is an alternative to opening the files with vimdiff. One advantage is that you compare buffers that aren&amp;rsquo;t files (eg text pasted from the clipboard).
Further reading:
 There&amp;rsquo;s some useful info in the &amp;ldquo;Comparing buffers with vimdiff&amp;rdquo; screencast. :help :diffthis  </description>
    </item>
    
    <item>
      <title>About the stationery pad feature in Finder</title>
      <link>https://til.codeinthehole.com/posts/about-the-stationery-pad-feature-in-finder/</link>
      <pubDate>Fri, 14 Aug 2020 10:30:00 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-the-stationery-pad-feature-in-finder/</guid>
      <description>If you use Finder to mark a file as a &amp;ldquo;stationery pad&amp;rdquo; then apps will open a copy of the file. The original file will effectively act as a template.
You can set this flag from the Get Info Finder dialogue:
  This only works when opening a file from Finder, so not that much use to people who live in iTerm (like me).</description>
    </item>
    
    <item>
      <title>About `pngcrush`</title>
      <link>https://til.codeinthehole.com/posts/about-pngcrush/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-pngcrush/</guid>
      <description>It&amp;rsquo;s an image optimizer for PNG files. It&amp;rsquo;s available via Homebrew for MacOS and works like:
$ pngcrush -ow screenshot.png where -ow means the original image file will be overwritten.
I&amp;rsquo;ve integrated it into the til_screenshot.sh helper script used by this repo.</description>
    </item>
    
    <item>
      <title>Asana has some magic search terms</title>
      <link>https://til.codeinthehole.com/posts/asana-has-some-magic-search-terms/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/asana-has-some-magic-search-terms/</guid>
      <description>If you use the &amp;ldquo;Search this project&amp;rdquo; widget (via the &amp;ldquo;&amp;hellip;&amp;rdquo; link on the right-hand side of the project view), you can search for:
 &amp;quot;nobody&amp;quot; to see unassigned tickets &amp;quot;not me&amp;quot; to see tickets assigned to anyone but you    Found via https://forum.asana.com/t/search-for-unassigned-tasks/4770
Quite basic functionality really but I almost gave up trying to find it.</description>
    </item>
    
    <item>
      <title>You can have SASS asset pipelines in Hugo</title>
      <link>https://til.codeinthehole.com/posts/you-can-have-sass-asset-pipelines-in-hugo/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/you-can-have-sass-asset-pipelines-in-hugo/</guid>
      <description>Which lets you build a CSS stylesheet via something like:
{{ $style := resources.Get &amp;#34;css/main.scss&amp;#34; | resources.ToCSS }} &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;{{ $style.Permalink }}&amp;#34;&amp;gt; This is rather nice as you get the usual live reloading functionality when using hugo server. In previous Hugo projects, I had a separate process for rebuilding CSS, which can now be factored away.
This feature is part of Hugo&amp;rsquo;s asset pipeline functionality and has been available since v0.</description>
    </item>
    
    <item>
      <title>About text fragments</title>
      <link>https://til.codeinthehole.com/posts/about-text-fragments/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-text-fragments/</guid>
      <description>Modern versions of Chrome and Edge support Text Fragments, which let you specify a text snippet in the URL fragment that the browser can highlight (or bring to the user&amp;rsquo;s attention in another way).
For example, opening https://wicg.github.io/scroll-to-text-fragment/#abstract:~:text=user%20agent%20can%20quickly%20emphasise in Chrome will open the page with &amp;ldquo;user agent can quickly emphasise&amp;rdquo; highlighted:
  Note the :~:text=$query in the URL.
There&amp;rsquo;s a Google-authored Chrome plugin that eases the process of building one of these URLs.</description>
    </item>
    
    <item>
      <title>Renaming a Terraform module is dangerous</title>
      <link>https://til.codeinthehole.com/posts/renaming-a-terraform-module-leads-to-resource-recreation/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/renaming-a-terraform-module-leads-to-resource-recreation/</guid>
      <description>As the state file uses the module name in identifiers and so a module rename causes Terraform to think all existing resources need to be destroyed and recreated.
You can avoid such needless destruction by editing the state file manually to correct the identifiers.
It might be possible to use terraform mv although I didn&amp;rsquo;t use that approach today.</description>
    </item>
    
    <item>
      <title>Where authentication for the `ubuntu` user on a EC2 instance is defined</title>
      <link>https://til.codeinthehole.com/posts/about-passwordless-users-in-ec2/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-passwordless-users-in-ec2/</guid>
      <description>The file that controls where the default ubuntu user on an Ubuntu EC2 instance is /etc/sudoers.d/90-cloud-init-users which has contents:
# User rules for ubuntu ubuntu ALL=(ALL) NOPASSWD:ALL def f(a: int) -&amp;gt; int: return None As you can see, the default ubuntu user has password-less, sudo access.
Source https://serverfault.com/questions/615034/disable-nopasswd-sudo-access-for-ubuntu-user-on-an-ec2-instance</description>
    </item>
    
    <item>
      <title>About the phrase &#34;Parking downhill&#34;</title>
      <link>https://til.codeinthehole.com/posts/park-downhill/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/park-downhill/</guid>
      <description>From https://news.ycombinator.com/item?id=23118940
 Before putting a project or incomplete task away, make notes of what the next thing was that you were going to work on. This lets you bypass that 10 minute orientation getting back into the project the next time you pick it up.
 This is something I&amp;rsquo;ve done for a while.
There&amp;rsquo;s various other ways of doing the same thing, such as:
 Leaving a failing test Leaving an incomplete sentence  In my Trello cards, I like to regularly add comments saying:</description>
    </item>
    
    <item>
      <title>About Alfred&#39;s clipboard history feature</title>
      <link>https://til.codeinthehole.com/posts/alfred-clipboard-history/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/alfred-clipboard-history/</guid>
      <description>Alfred has a clipboard history feature which lets you easily pluck out previous values from your system clipboard.
It&amp;rsquo;s disabled by default.</description>
    </item>
    
    <item>
      <title>About Alfred&#39;s snippet collections</title>
      <link>https://til.codeinthehole.com/posts/alfred-snippet-collections/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/alfred-snippet-collections/</guid>
      <description>You can create &amp;ldquo;collections&amp;rdquo; of snippets in Alfred, such as:
 Common comments used in code review. Calendly URLs Personal Zoom link  Anything that you might want to insert into text regularly.
  See https://www.alfredapp.com/help/features/snippets/</description>
    </item>
    
    <item>
      <title>About Quitter</title>
      <link>https://til.codeinthehole.com/posts/quitter/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/quitter/</guid>
      <description>There&amp;rsquo;s a MacOS app called Quitter which will automatically quit applications after some period of inactivity.
  </description>
    </item>
    
    <item>
      <title>About the MacOS `screencapture` utility</title>
      <link>https://til.codeinthehole.com/posts/about-the-screencapture-bsd-util/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-the-screencapture-bsd-util/</guid>
      <description>It&amp;rsquo;s what MacOS uses for its shortcuts but can be called from the command-line:
$ screencapture It has lots of interesting options &amp;ndash; see man screencapture.</description>
    </item>
    
    <item>
      <title>About Twitter&#39;s `min_faves` search filter</title>
      <link>https://til.codeinthehole.com/posts/about-twitters-minfaves-search-filter/</link>
      <pubDate>Thu, 16 Jul 2020 11:31:56 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-twitters-minfaves-search-filter/</guid>
      <description>You can do searches like:
from:frankieboyle min_faves:10000 to see, for example, the best tweets from a given account. It works really well &amp;ndash; you just need to pick an appropriate minimum value for the account.
Examples:
 https://twitter.com/search?q=from%3Afrankieboyle%20min_faves%3A10000 https://twitter.com/search?q=from%3Afesshole%20min_faves%3A400  There&amp;rsquo;s also a min_retweets filter which can be used for a similar purpose.</description>
    </item>
    

  </channel>
</rss>
