<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform - Today I Learnt...</title>
    <link>https://til.codeinthehole.com/tags/terraform/</link>
    <description>Recent content in Terraform on Today I Learnt...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Sep 2020 11:49:53 +0100</lastBuildDate>
    
	<atom:link href="https://til.codeinthehole.com/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    

    
    <item>
      <title>How to conditionally include items in a Terraform list</title>
      <link>https://til.codeinthehole.com/posts/how-to-conditionally-include-items-in-a-terraform-list/</link>
      <pubDate>Tue, 15 Sep 2020 11:49:53 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-conditionally-include-items-in-a-terraform-list/</guid>
      <description>It&amp;rsquo;s not obvious how to build a Terraform list where an item is only included if some condition is met. One solution is to use flatten along with a conditional expression.
Something like this:
resource &amp;#34;aws_security_group&amp;#34; &amp;#34;this&amp;#34; { ... ingress { ... security_groups = flatten([ aws_security_group.server-type-a.id, var.include_server_type_b ? aws_security_group.server-type-b[*].id : [] ]) } where the server-type-b security group is only included the security_groups list if var.include_server_type_b is truthy.</description>
    </item>
    
    <item>
      <title>Renaming a Terraform module is dangerous</title>
      <link>https://til.codeinthehole.com/posts/renaming-a-terraform-module-leads-to-resource-recreation/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/renaming-a-terraform-module-leads-to-resource-recreation/</guid>
      <description>As the state file uses the module name in identifiers and so a module rename causes Terraform to think all existing resources need to be destroyed and recreated.
You can avoid such needless destruction by editing the state file manually to correct the identifiers.
It might be possible to use terraform mv although I didn&amp;rsquo;t use that approach today.</description>
    </item>
    

  </channel>
</rss>
