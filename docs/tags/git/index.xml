<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git - Today I Learnt...</title>
    <link>https://til.codeinthehole.com/tags/git/</link>
    <description>Recent content in Git on Today I Learnt...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Mar 2021 16:46:39 +0100</lastBuildDate>
    
	<atom:link href="https://til.codeinthehole.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    

    
    <item>
      <title>That `vim-polyglot` conflicts with Hub when creating pull requests</title>
      <link>https://til.codeinthehole.com/posts/that-vimpolyglot-conflicts-with-hub-when-creating-pull-requests/</link>
      <pubDate>Tue, 30 Mar 2021 16:46:39 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/that-vimpolyglot-conflicts-with-hub-when-creating-pull-requests/</guid>
      <description>Hub, the Github CLI tool, allows a pull request to be created from the command line.</description>
    </item>
    
    <item>
      <title>About `git-absorb`</title>
      <link>https://til.codeinthehole.com/posts/about-gitabsorb/</link>
      <pubDate>Sun, 28 Mar 2021 11:28:17 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-gitabsorb/</guid>
      <description>git-absorb is a great tool for crafting atomic commits.</description>
    </item>
    
    <item>
      <title>How to include the date in `git reflog` output</title>
      <link>https://til.codeinthehole.com/posts/how-to-include-the-date-in-git-reflog-output/</link>
      <pubDate>Thu, 25 Mar 2021 17:11:34 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-include-the-date-in-git-reflog-output/</guid>
      <description>By default, the output of git reflog doesn&amp;rsquo;t include the date when the reference was updated.</description>
    </item>
    
    <item>
      <title>About delta, a viewer for Git and diff output</title>
      <link>https://til.codeinthehole.com/posts/about-delta/</link>
      <pubDate>Fri, 19 Mar 2021 09:42:34 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/about-delta/</guid>
      <description>delta provides much improved diff views in the terminal.</description>
    </item>
    
    <item>
      <title>You can use Git log to view the evolution of a function</title>
      <link>https://til.codeinthehole.com/posts/you-can-use-git-log-to-view-the-evolution-of-a-function/</link>
      <pubDate>Fri, 05 Mar 2021 22:49:17 +0000</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/you-can-use-git-log-to-view-the-evolution-of-a-function/</guid>
      <description>Modern versions of git log provide a -L option which lets you trace the evolution of a line range or function:</description>
    </item>
    
    <item>
      <title>How to resolve Git rebase conflicts on renamed files</title>
      <link>https://til.codeinthehole.com/posts/how-to-resolve-git-conflicts-on-renamed-files/</link>
      <pubDate>Mon, 05 Oct 2020 11:34:01 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-resolve-git-conflicts-on-renamed-files/</guid>
      <description>If there&amp;rsquo;s been a large-scale renaming of files in master and you attempt to rebase your pull-request branch, the resulting conflicts can be tricky to resolve.</description>
    </item>
    
    <item>
      <title>How to count lines of code in a Git repo for a given commit</title>
      <link>https://til.codeinthehole.com/posts/how-to-count-lines-of-code-in-a-git-repo/</link>
      <pubDate>Thu, 17 Sep 2020 15:54:21 +0100</pubDate>
      
      <guid>https://til.codeinthehole.com/posts/how-to-count-lines-of-code-in-a-git-repo/</guid>
      <description>For a given commit $SHA, use:
$ git diff --shortstat `git hash-object -t tree /dev/null`.</description>
    </item>
    

  </channel>
</rss>
